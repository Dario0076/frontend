version: '3.8'

services:
  # Base de datos PostgreSQL
  postgres:
    image: postgres:15
    container_name: inventario-postgres
    environment:
      POSTGRES_DB: postgres
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init-db-postgres.sql:/docker-entrypoint-initdb.d/init-db.sql
    networks:
      - inventario-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      timeout: 20s
      retries: 10

  # UsuariosService
  usuarios-service:
    build: ./UsuariosService
    container_name: usuarios-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/usuariosdb
    ports:
      - "8083:8083"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventario-network

  # ProductosService
  productos-service:
    build: ./ProductosService
    container_name: productos-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/productosdb
    ports:
      - "8084:8084"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventario-network

  # StockService
  stock-service:
    build: ./StockService
    container_name: stock-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/stockdb
    ports:
      - "8081:8081"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventario-network

  # MovimientoService
  movimiento-service:
    build: ./MovimientoService
    container_name: movimiento-service
    environment:
      SPRING_PROFILES_ACTIVE: docker
      DATABASE_URL: postgresql://postgres:postgres@postgres:5432/movimientosdb
    ports:
      - "8090:8090"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - inventario-network

volumes:
  postgres_data:

networks:
  inventario-network:
    driver: bridge
